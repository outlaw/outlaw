LOGFILE=/tmp/hooroo_docker_install.log
BIN_FILE=$(realpath ${BASH_SOURCE[0]})
INSTALL_DIR=$(realpath `dirname ${BIN_FILE}`/../)
START_COMMAND="start"
STOP_COMMAND="stop"

function log_run {
  log_debug "$1"
  eval "$1 > $LOGFILE 2>&1"
}

function check_for_docker_machine {
  log_run "docker-machine ls | grep dev"
}

function check_docker_works {
  log_info "Checking docker works"
  log_run "docker ps"
  if [[ $? -ne 0 ]]; then
    echo "Error during installation"
    exit 1
  fi
}

function create_docker_machine {
  log_info "Creating docker machine"
  check_for_docker_machine
  if [[ $? -ne 0 ]]; then
    log_run "docker-machine create --driver virtualbox dev"
    echo 'Consider adding eval "$(docker-machine env dev)" to your shell profile script'
    echo "Docker host is: $(docker-machine ip dev)"
  fi

  log_run "docker-machine start dev"
  eval "$(DEBUG=false docker-machine env dev)"
}

function install_hooroo_cert {
  log_info "Installing root certificate for Hooroo CA"
  # Install Hooroo Root Certificate into boot2docker
  log_run "bash <(curl -s https://gist.githubusercontent.com/dekz/4c2bd630df73d71c1a03/raw/add_custom_cert_to_boot2docker.sh)"
}

function pull_test_image {
  log_info "Pulling test image"
  #log_run "docker pull docker-registry.in.jqdev.net/hooroo-base-alpine:latest"
}

function success {
  log_run "curl -o /tmp/imgcat https://raw.githubusercontent.com/gnachman/iTerm2/master/tests/imgcat"
  log_run "chmod +x /tmp/imgcat"
  log_run "curl -o  /tmp/docker_install.png http://i.imgur.com/WQZRTjF.png"

  /tmp/imgcat /tmp/docker_install.png

  echo "Successfully installed"

}

eval "$(echo "orig_install()"; declare -f install | tail -n +2)"
eval "$(echo "orig_handle_command()"; declare -f handle_command | tail -n +2)"
function install {
  log_info "Installing Outlaw..."
  orig_install
  create_docker_machine
  check_docker_works
  install_hooroo_cert
  pull_test_image

  success
}

function load_docker_environment {
  eval "$(DEBUG=false docker-machine env dev)"
}

function ensure_docker_machine_running {
  log_run "docker-machine start dev"
}

function start {
  log_info "Starting Outlaw..."
  load_docker_environment
  ensure_docker_machine_running

  if [[ ! -f "$INSTALL_DIR/docker-compose.yml" ]]; then
    log_error "Unable to find docker-compose.yml in $INSTALL_DIR"
    exit 1
  fi

  docker-compose -f $INSTALL_DIR/docker-compose.yml up
}

function stop {
  log_info "Stopping Outlaw..."
  load_docker_environment
  ensure_docker_machine_running

  if [[ ! -f "$INSTALL_DIR/docker-compose.yml" ]]; then
    log_error "Unable to find docker-compose.yml in $INSTALL_DIR"
    exit 1
  fi

  docker-compose -f $INSTALL_DIR/docker-compose.yml stop
}

function instructions {
  echo -e
  echo -e "Usage: outlaw [COMMAND] [OPTIONS]"
  echo -e "Commands:"
  echo -e "  $SYNC_COMMAND\t\tStart file syncing. This is the default if no COMMAND is specified."
  echo -e "  $INSTALL_COMMAND\tInstall outlaw and all of its dependencies."
  echo -e "  $START_COMMAND\tStart the outlaw helper containers."
  echo -e "  $STOP_COMMAND\tStop the outlaw helper containers."
}

function handle_command {
  echo "handling"
  while [[ $# > 0 ]]; do
    key="$1"

    case $key in
      "$START_COMMAND")
        echo "start"
        start
        ;;
      "$STOP_COMMAND")
        echo "stop"
        stop
        ;;
      "$INSTALL_COMMAND")
        install
        ;;
      *)
        orig_handle_command "$@"
        ;;
    esac

    shift
  done
  exit 0
}

handle_command "$@"
